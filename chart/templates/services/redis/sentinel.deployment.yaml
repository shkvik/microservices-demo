apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: {{ .Values.namespace }}
data:
  sentinel.conf: |
    port 26379
    sentinel monitor redis-main redis-main-discovery.{{ .Values.namespace }}.svc.cluster.local 6379 2
    sentinel down-after-milliseconds redis-main 5000
    sentinel failover-timeout redis-main 10000
    sentinel parallel-syncs redis-main 1
    sentinel resolve-hostnames yes
---
## Sentinel priority class
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: sentinel-priority
value: 200
globalDefault: false
description: "Priority class for Sentinel coordinators"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.config.cache.replication.count }}
  selector:
    matchLabels:
      app: redis-sentinel
      role: sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
        role: sentinel
    spec:
      volumes:
        - name: sentinel-config
          configMap:
            name: redis-sentinel-config
        - name: sentinel-storage
          persistentVolumeClaim:
            claimName: cache-coordinator-pvc
      initContainers:
        - name: init-sentinel-storage
          image: busybox
          command: ['sh', '-c', 'mkdir -p /sentinel/sentinel-data']
          volumeMounts:
            - name: sentinel-storage
              mountPath: /sentinel
        - name: load-sentinel-config
          image: busybox
          volumeMounts:
            - name: sentinel-storage
              mountPath: /sentinel
            - name: sentinel-config
              mountPath: /etc/sentinel/sentinel.conf
              subPath: sentinel.conf
          command: ['sh', '-c', 'ls /etc/sentinel && cp /etc/sentinel/sentinel.conf /sentinel/sentinel-data/']
      containers:
        - name: redis-sentinel
          image: redis:7
          volumeMounts:
            - name: sentinel-storage
              mountPath: /sentinel
          command: ['redis-sentinel', '/sentinel/sentinel-data/sentinel.conf', '--dir', '/sentinel/sentinel-data']
          ports:
            - containerPort: 26379
      dnsPolicy: ClusterFirst
      nodeSelector: # Allow only on nodes with "persistence-managed-replicas" label
        persistence-managed-replicas: "true"
      affinity:
        podAntiAffinity: # Limit number of pods of the same type to 1 per node
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - redis-sentinel
            topologyKey: "kubernetes.io/hostname"
